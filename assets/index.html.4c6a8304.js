import{r as t,o as c,b as l,d as a,w as e,F as r,e as n,f as s,a as i}from"./app.072e5e9e.js";import{_ as u}from"./plugin-vue_export-helper.21dcd24c.js";const k={},d=n("h1",{id:"guide",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#guide","aria-hidden":"true"},"#"),s(" Guide")],-1),b=n("h2",{id:"installation",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#installation","aria-hidden":"true"},"#"),s(" Installation")],-1),m=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"yarn"),s(),n("span",{class:"token function"},"add"),s(` d3-graph-controller
`)])])],-1),g=n("div",{class:"language-bash ext-sh"},[n("pre",{class:"language-bash"},[n("code",null,[n("span",{class:"token function"},"npm"),s(),n("span",{class:"token function"},"install"),s(` d3-graph-controller
`)])])],-1),h=i(`<h2 id="usage" tabindex="-1"><a class="header-anchor" href="#usage" aria-hidden="true">#</a> Usage</h2><p>The data model of a graph can be customized to fit any need. The following sections show a model with two node types, <code>primary</code> and <code>secondary</code>, custom node radius and link length as well as dynamic force strength.</p><h3 id="type-tokens" tabindex="-1"><a class="header-anchor" href="#type-tokens" aria-hidden="true">#</a> Type tokens</h3><p>First, define the types of nodes the graph may contain.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">export</span> <span class="token keyword">type</span> <span class="token class-name">CustomType</span> <span class="token operator">=</span> <span class="token string">&#39;primary&#39;</span> <span class="token operator">|</span> <span class="token string">&#39;secondary&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="node" tabindex="-1"><a class="header-anchor" href="#node" aria-hidden="true">#</a> Node</h3><p>Then you can enhance the <code>GraphNode</code> interface with custom properties that can be accessed later on.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> GraphNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">CustomNode</span> <span class="token keyword">extends</span> <span class="token class-name">GraphNode<span class="token operator">&lt;</span>CustomType<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  radius<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="link" tabindex="-1"><a class="header-anchor" href="#link" aria-hidden="true">#</a> Link</h3><p>Analogous to nodes, <code>GraphLink</code> can be extended. While not shown in the example below, <code>GraphLink</code> can have specific node types for <code>source</code> and <code>target</code>.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> GraphLink <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token keyword">export</span> <span class="token keyword">interface</span> <span class="token class-name">CustomLink</span> <span class="token keyword">extends</span> <span class="token class-name">GraphLink<span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token operator">&gt;</span></span> <span class="token punctuation">{</span>
  length<span class="token operator">:</span> <span class="token builtin">number</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="config" tabindex="-1"><a class="header-anchor" href="#config" aria-hidden="true">#</a> Config</h3><p>The config can then use the custom types.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineGraphConfig <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token keyword">const</span> config <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineGraphConfig</span><span class="token generic class-name"><span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token punctuation">,</span> CustomLink<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  <span class="token function-variable function">getNodeRadius</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> CustomNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> node<span class="token punctuation">.</span>radius<span class="token punctuation">,</span>
  <span class="token function-variable function">getLinkLength</span><span class="token operator">:</span> <span class="token punctuation">(</span>link<span class="token operator">:</span> CustomLink<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> link<span class="token punctuation">.</span>length<span class="token punctuation">,</span>
  forces<span class="token operator">:</span> <span class="token punctuation">{</span>
    centering<span class="token operator">:</span> <span class="token punctuation">{</span>
      <span class="token function-variable function">strength</span><span class="token operator">:</span> <span class="token punctuation">(</span>node<span class="token operator">:</span> CustomNode<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">(</span>node<span class="token punctuation">.</span>type <span class="token operator">===</span> <span class="token string">&#39;primary&#39;</span> <span class="token operator">?</span> <span class="token number">0.5</span> <span class="token operator">:</span> <span class="token number">0.1</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">}</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br></div></div><h3 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> Model</h3><p>The actual model can be created using the helper methods seen below. They are type safe and support custom properties.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineGraph<span class="token punctuation">,</span> defineLink<span class="token punctuation">,</span> defineNode <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineNode</span><span class="token generic class-name"><span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  type<span class="token operator">:</span> <span class="token string">&#39;primary&#39;</span><span class="token punctuation">,</span>
  fontSize<span class="token operator">:</span> <span class="token string">&#39;1rem&#39;</span><span class="token punctuation">,</span>
  isFocused<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  color<span class="token operator">:</span> <span class="token string">&#39;green&#39;</span><span class="token punctuation">,</span>
  label<span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span>
  labelColor<span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
  radius<span class="token operator">:</span> <span class="token number">64</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> b <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineNode</span><span class="token generic class-name"><span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  id<span class="token operator">:</span> <span class="token string">&#39;b&#39;</span><span class="token punctuation">,</span>
  type<span class="token operator">:</span> <span class="token string">&#39;secondary&#39;</span><span class="token punctuation">,</span>
  fontSize<span class="token operator">:</span> <span class="token string">&#39;1rem&#39;</span><span class="token punctuation">,</span>
  isFocused<span class="token operator">:</span> <span class="token boolean">false</span><span class="token punctuation">,</span>
  color<span class="token operator">:</span> <span class="token string">&#39;blue&#39;</span><span class="token punctuation">,</span>
  label<span class="token operator">:</span> <span class="token string">&#39;B&#39;</span><span class="token punctuation">,</span>
  labelColor<span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
  radius<span class="token operator">:</span> <span class="token number">32</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> aToB <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineLink</span><span class="token generic class-name"><span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token punctuation">,</span> CustomNode<span class="token punctuation">,</span> CustomLink<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  source<span class="token operator">:</span> a<span class="token punctuation">,</span>
  target<span class="token operator">:</span> b<span class="token punctuation">,</span>
  color<span class="token operator">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">,</span>
  label<span class="token operator">:</span> <span class="token string">&#39;128&#39;</span><span class="token punctuation">,</span>
  labelColor<span class="token operator">:</span> <span class="token string">&#39;black&#39;</span><span class="token punctuation">,</span>
  showLabel<span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>
  length<span class="token operator">:</span> <span class="token number">128</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>

<span class="token keyword">const</span> graph <span class="token operator">=</span> <span class="token generic-function"><span class="token function">defineGraph</span><span class="token generic class-name"><span class="token operator">&lt;</span>CustomType<span class="token punctuation">,</span> CustomNode<span class="token punctuation">,</span> CustomLink<span class="token operator">&gt;</span></span></span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  nodes<span class="token operator">:</span> <span class="token punctuation">[</span>a<span class="token punctuation">,</span> b<span class="token punctuation">]</span><span class="token punctuation">,</span>
  links<span class="token operator">:</span> <span class="token punctuation">[</span>aToB<span class="token punctuation">]</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br><span class="line-number">11</span><br><span class="line-number">12</span><br><span class="line-number">13</span><br><span class="line-number">14</span><br><span class="line-number">15</span><br><span class="line-number">16</span><br><span class="line-number">17</span><br><span class="line-number">18</span><br><span class="line-number">19</span><br><span class="line-number">20</span><br><span class="line-number">21</span><br><span class="line-number">22</span><br><span class="line-number">23</span><br><span class="line-number">24</span><br><span class="line-number">25</span><br><span class="line-number">26</span><br><span class="line-number">27</span><br><span class="line-number">28</span><br><span class="line-number">29</span><br><span class="line-number">30</span><br><span class="line-number">31</span><br><span class="line-number">32</span><br><span class="line-number">33</span><br><span class="line-number">34</span><br><span class="line-number">35</span><br><span class="line-number">36</span><br><span class="line-number">37</span><br><span class="line-number">38</span><br></div></div><h3 id="controller" tabindex="-1"><a class="header-anchor" href="#controller" aria-hidden="true">#</a> Controller</h3><p>The last step is putting it all together and creating the controller.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> GraphController <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>

<span class="token comment">// Any HTMLDivElement can be used as the container</span>
<span class="token keyword">const</span> container <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&#39;graph&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLDivElement

<span class="token keyword">const</span> controller <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">GraphController</span><span class="token punctuation">(</span>container<span class="token punctuation">,</span> graph<span class="token punctuation">,</span> config<span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>Do not forget to call <code>controller.shutdown()</code> when the graph is no longer required or your component will be destroyed.</p></div><h2 id="styling" tabindex="-1"><a class="header-anchor" href="#styling" aria-hidden="true">#</a> Styling</h2><p>The library provides default styles, which need to be imported manually.</p><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token string">&#39;d3-graph-controller/default.css&#39;</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><p>In addition, the properties <code>color</code> and <code>fontSize</code> of nodes and links accept any valid CSS value. This allows you to use dynamic colors with CSS variables.</p><div class="language-css ext-css line-numbers-mode"><pre class="language-css"><code><span class="token selector">:root</span> <span class="token punctuation">{</span>
  <span class="token property">--color-primary</span><span class="token punctuation">:</span> <span class="token string">&#39;red&#39;</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token keyword">import</span> <span class="token punctuation">{</span> defineNodeWithDefaults <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&#39;d3-graph-controller&#39;</span>
<span class="token keyword">import</span> <span class="token string">&#39;d3-graph-controller/default.css&#39;</span>

<span class="token keyword">const</span> a <span class="token operator">=</span> <span class="token function">defineNodeWithDefaults</span><span class="token punctuation">(</span><span class="token punctuation">{</span>
  type<span class="token operator">:</span> <span class="token string">&#39;node&#39;</span><span class="token punctuation">,</span>
  id<span class="token operator">:</span> <span class="token string">&#39;a&#39;</span><span class="token punctuation">,</span>
  label<span class="token operator">:</span> <span class="token string">&#39;A&#39;</span><span class="token punctuation">,</span>
  color<span class="token operator">:</span> <span class="token string">&#39;var(--color-primary)&#39;</span><span class="token punctuation">,</span>
  fontSize<span class="token operator">:</span> <span class="token string">&#39;2rem&#39;</span><span class="token punctuation">,</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span>
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br><span class="line-number">7</span><br><span class="line-number">8</span><br><span class="line-number">9</span><br><span class="line-number">10</span><br></div></div><p>For customization of the default theme, the custom CSS property <code>--color-node-stroke</code> can be used.</p>`,28);function y(f,v){const p=t("CodeGroupItem"),o=t("CodeGroup");return c(),l(r,null,[d,b,a(o,null,{default:e(()=>[a(p,{title:"Yarn",active:""},{default:e(()=>[m]),_:1}),a(p,{title:"npm"},{default:e(()=>[g]),_:1})]),_:1}),h],64)}var x=u(k,[["render",y]]);export{x as default};
